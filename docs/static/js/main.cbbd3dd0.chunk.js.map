{"version":3,"sources":["images/logo.png","images/logoRM.png","components/Header.js","components/Filters/FilterName.js","components/Filters/FilterGender.js","components/Filters/FilterStatus.js","components/Filters/FilterSort.js","components/Extras/Reset.js","components/Filters/Filters.js","images/dead-icon.png","images/unknown.jpeg","components/CharacterCard.js","images/not-found-character.png","components/Extras/NotFound.js","components/CharacterList.js","components/CharacterDetail.js","images/loading.gif","components/Extras/Loading.js","images/server-error.png","components/Extras/ServerError.js","images/page-not-found.png","components/Extras/PageNotFound.js","images/missing-character.png","components/Extras/MissingCharacter.js","components/App.js","services/localstorage.js","services/api.js","index.js"],"names":["Header","className","src","logo","alt","logo2","FilterName","props","htmlFor","id","name","onChange","ev","data","currentTarget","value","handleFilters","filterName","FilterGender","filterGender","FilterStatus","filterStatus","FilterAlphabet","type","checked","isSortedByName","Reset","onClick","handleReset","Filters","onSubmit","preventDefault","postMotionProps","initial","animate","variants","opacity","y","scale","enter","transition","duration","whileHover","position","zIndex","background","rotate","filter","CharacterCard","image","species","status","motion","li","to","icon","defaultProps","unkwnon","NotFound","notFound","CharacterList","getCharacterList","map","character","length","isLoading","CharacterDetail","origin","episodes","onclick","Loading","loading","ServerError","serverError","PageNotFound","pageNotFound","MissingCharacter","missingCharacter","dataLocal","JSON","parse","localStorage","getItem","gender","location","order","getFromLocalStorage","App","useState","setServerError","setIsLoading","characters","setCharacters","setFilterName","setFilterGender","setFilterStatus","setIsSortedByName","useEffect","fetch","then","response","ok","json","results","catch","isOrdered","filters","toLowerCase","setItem","stringify","setLocalStorage","exact","path","filteredCharacters","includes","sort","a","b","filterCharacthers","component","characterId","match","params","foundCharacter","find","parseInt","episode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbbd3dd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","export default __webpack_public_path__ + \"static/media/logoRM.1bd1e349.png\";","import logo from '../images/logo.png';\r\nimport logo2 from '../images/logoRM.png';\r\nimport '../stylesheets/components/Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n    <img className=\"Header__img\" src={logo} alt=\"Rick and Morty logo\" />\r\n      <img className=\"Header__img\" src={logo2} alt=\"Rick and Morty logo 2\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterName(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filterName\">Name</label>\r\n      <input\r\n        className=\"Filters__input Filters__input--name\"\r\n        id=\"filterName\"\r\n        name=\"name\"\r\n        onChange={handleChange}\r\n        value={props.filterName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilterName.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterName;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterGender(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"gender\">Gender</label>\r\n      <select\r\n        className=\"Filters__input\"\r\n        name=\"gender\"\r\n        id=\"gender\"\r\n        onChange={handleChange}\r\n        value={props.filterGender}\r\n      >\r\n        <option name=\"gender\" value=\"all\">\r\n          All\r\n        </option>\r\n        <option name=\"gender\" value=\"female\">\r\n          Female\r\n        </option>\r\n        <option name=\"gender\" value=\"male\">\r\n          Male\r\n        </option>\r\n        <option name=\"gender\" value=\"unknown\">\r\n          Unknown\r\n        </option>\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterGender.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterGender;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterStatus(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"gender\">Status</label>\r\n      <select\r\n        className=\"Filters__input\"\r\n        name=\"status\"\r\n        id=\"status\"\r\n        onChange={handleChange}\r\n        value={props.filterStatus}\r\n      >\r\n        <option name=\"status\" value=\"all\">\r\n          All\r\n        </option>\r\n        <option name=\"status\" value=\"alive\">\r\n          Alive\r\n        </option>\r\n        <option name=\"status\" value=\"dead\">\r\n          Dead\r\n        </option>\r\n        <option name=\"status\" value=\"unknown\">\r\n          Unknown\r\n        </option>\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterStatus.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterStatus;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterAlphabet(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      checked: ev.currentTarget.checked,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"Filters__input--orderLabel\" htmlFor=\"order\">\r\n        <input\r\n          className=\"Filters__input--order\"\r\n          id=\"order\"\r\n          type=\"checkbox\"\r\n          value=\"order\"\r\n          name=\"order\"\r\n          onChange={handleChange}\r\n          checked={props.isSortedByName ? true : false}\r\n        />\r\n        <span\r\n          className={props.isSortedByName ? 'Filters__input--orderChecked' : ''}\r\n        ></span>\r\n        Order by name\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterAlphabet.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FilterAlphabet;\r\n","function Reset(props) {\r\n  const handleChange = () => {\r\n    props.handleReset();\r\n  };\r\n\r\n  return (\r\n    <button className=\"Filters__reset\" onClick={handleChange}>\r\n      Reset\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Reset;\r\n","import PropTypes from 'prop-types';\r\nimport FilterName from './FilterName';\r\nimport FilterGender from './FilterGender';\r\nimport FilterStatus from './FilterStatus';\r\nimport FilterAlphabet from './FilterSort';\r\nimport Reset from '../Extras/Reset';\r\nimport '../../stylesheets/components/Filters.scss';\r\n\r\nfunction Filters(props) {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"Filters\" onSubmit={handleSubmit}>\r\n      <FilterName\r\n        handleFilters={props.handleFilters}\r\n        filterName={props.filterName}\r\n      />\r\n      <FilterGender\r\n        handleFilters={props.handleFilters}\r\n        filterGender={props.filterGender}\r\n      />\r\n      <FilterStatus\r\n        handleFilters={props.handleFilters}\r\n        filterStatus={props.filterStatus}\r\n      />\r\n      <FilterAlphabet\r\n        handleFilters={props.handleFilters}\r\n        isSortedByName={props.isSortedByName}\r\n      />\r\n      <Reset handleReset={props.handleReset} />\r\n    </form>\r\n  );\r\n}\r\n\r\nFilters.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/dead-icon.b7c3daa8.png\";","export default __webpack_public_path__ + \"static/media/unknown.049210b4.jpeg\";","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport icon from '../images/dead-icon.png';\r\nimport unkwnon from '../images/unknown.jpeg';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst gridVariants = {\r\n  exit: {\r\n    transition: {\r\n      staggerChildren: 0.1\r\n    }\r\n  }\r\n};\r\n\r\nconst gridMotionProps = {\r\n  initial: 'initial',\r\n  animate: 'enter',\r\n  exit: 'exit',\r\n  variants: gridVariants\r\n}\r\n\r\nconst postVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    y: 20,\r\n    scale: .9\r\n  },\r\n  enter: {\r\n    opacity: 1,\r\n    y: 0,\r\n    scale: 1,\r\n    transition: {\r\n      duration: .5\r\n    }\r\n  }\r\n};\r\n\r\nconst postWhileHover = {\r\n  position: 'relative',\r\n  zIndex: 1,\r\n  background: 'white',\r\n  scale: [1, 1.4, 1.2],\r\n  rotate: [0, 10, -10, 0],\r\n  filter: [\r\n    'hue-rotate(0) contrast(100%)',\r\n    'hue-rotate(360deg) contrast(200%)',\r\n    'hue-rotate(45deg) contrast(300%)',\r\n    'hue-rotate(0) contrast(100%)'],\r\n  transition: {\r\n    duration: .5\r\n  }\r\n}\r\n\r\nconst postMotionProps = {\r\n  initial: 'initial',\r\n  animate: 'enter',\r\n  variants: postVariants,\r\n  whileHover: postWhileHover\r\n}\r\nfunction CharacterCard(props) {\r\n  const renderIcon = () => {\r\n    return status === 'Dead' ? (\r\n      <img\r\n        className=\"CharacterList__list--icon\"\r\n        src={icon}\r\n        alt=\"This character is no longer alive\"\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const { id, image, name, species, status } = props;\r\n  return (\r\n    <motion.li key={id} className=\"card\" {...postMotionProps}>\r\n      \r\n    <Link className=\"CharacterList__link\" to={`/character/${id}`}>\r\n      <article className=\"CharacterList__article\">\r\n        <img\r\n          className=\"CharacterList__list--img\"\r\n          src={image}\r\n          alt={`${name}, Rick and Mortie character`}\r\n        />\r\n        <h3 className=\"CharacterList__list--name\">{name}</h3>\r\n        <ul className=\"CharacterList__list--features\">\r\n          <li className=\"CharacterList__list--species\">Species: {species}</li>\r\n          <li className=\"CharacterList__list--status\">Status:{status}</li>\r\n        </ul>\r\n        {renderIcon()}\r\n      </article>\r\n    </Link>\r\n    </motion.li>\r\n  );\r\n}\r\n\r\nCharacterCard.defaultProps = {\r\n  image: { unkwnon },\r\n  name: 'Unknown character',\r\n  species: 'Unknown',\r\n  status: 'Unknown',\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/not-found-character.80dc1a7d.png\";","import '../../stylesheets/extras/NotFound.scss';\r\nimport notFound from '../../images/not-found-character.png';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <article className=\"NotFound\">\r\n      <img\r\n        className=\"NotFound__img\"\r\n        src={notFound}\r\n        alt=\"No results for your search\"\r\n      />\r\n      <p className=\"NotFound__text\">\r\n        Holly shit, the character you want doesn't exist\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import PropTypes from 'prop-types';\r\nimport Filters from './Filters/Filters';\r\nimport CharacterCard from './CharacterCard';\r\nimport NotFound from './Extras/NotFound';\r\nimport '../stylesheets/components/CharacterList.scss';\r\n\r\nfunction CharacterList(props) {\r\n  const getCharacterList = props.data.map((character) => {\r\n    const { id, image, name, status, species } = character;\r\n    return (\r\n      <li className=\"CharacterList__list--items\" key={id}>\r\n        <CharacterCard\r\n          id={id}\r\n          image={image}\r\n          name={name}\r\n          species={species}\r\n          status={status}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main className=\"CharacterList\">\r\n      <section className=\"CharacterList__section\">\r\n        <Filters\r\n          handleFilters={props.handleFilters}\r\n          handleReset={props.handleReset}\r\n          filterName={props.filterName}\r\n          filterGender={props.filterGender}\r\n          filterStatus={props.filterStatus}\r\n          isSortedByName={props.isSortedByName}\r\n        />\r\n        {!getCharacterList.length && !props.isLoading ? (\r\n          <NotFound />\r\n        ) : (\r\n          <ul className=\"CharacterList__list\">{getCharacterList}</ul>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  handleFilters: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default CharacterList;\r\n","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/components/CharacterDetail.scss';\r\n\r\nfunction CharacterDetail(props) {\r\n  const { image, name, species, status, origin, episodes } = props;\r\n  return (\r\n    <div className=\"CharacterDetail__wrapper\">\r\n      <article className=\"CharacterDetail__article\">\r\n        <img\r\n          className=\"CharacterDetail__img\"\r\n          src={image}\r\n          alt={`${name}, Rick and Mortie character`}\r\n        />\r\n        <h3 className=\"CharacterDetail__title\">{name}</h3>\r\n        <ul className=\"CharacterDetail__list\">\r\n          <li className=\"CharacterDetail__list--species\">\r\n            Species: {` ${species}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--status\">\r\n            Status:{` ${status}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--origin\">\r\n            Origin: {` ${origin}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--episodes\">\r\n            Episodes: {episodes}\r\n          </li>\r\n        </ul>\r\n        <button onclick=\"CharacterDetail__link\" to=\"/\">Voltar </button>\r\n        <Link className=\"CharacterDetail__link\" to=\"/\">\r\n          Go back to all characters\r\n        </Link>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nCharacterDetail.defaultProps = {\r\n  image: 'https://rickandmortyapi.com/api/character/avatar/19.jpeg',\r\n  name: ' Unknown character',\r\n  species: ' Unknown',\r\n  status: ' Unknown',\r\n  origin: ' Unknown',\r\n  episodes: ' Unknown',\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/loading.0bdfa263.gif\";","import '../../stylesheets/extras/Loading.scss';\r\nimport loading from '../../images/loading.gif';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <article className=\"Loading\">\r\n      <img className=\"Loading__gift\" src={loading} alt=\"Loading...\" />\r\n      <p>Loading...</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/server-error.ed9fa0be.png\";","import '../../stylesheets/extras/ServerError.scss';\r\nimport serverError from '../../images/server-error.png';\r\n\r\nfunction ServerError() {\r\n  return (\r\n    <article className=\"ServerError\">\r\n      <img className=\"ServerError__img\" src={serverError} alt=\"Server error\" />\r\n      <p>The server doesn't feel like working...</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","export default __webpack_public_path__ + \"static/media/page-not-found.65b57cd0.png\";","import { Link } from 'react-router-dom';\r\nimport '../../stylesheets/extras/PageNotFound.scss';\r\nimport pageNotFound from '../../images/page-not-found.png';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <article className=\"PageNotFound\">\r\n      <img\r\n        className=\"PageNotFound__img\"\r\n        src={pageNotFound}\r\n        alt=\"No results for your search\"\r\n      />\r\n      <p className=\"PageNotFound__text\">\r\n        Uh, you are trying to navegate to a page I haven't developed\r\n      </p>\r\n      <Link className=\"PageNotFound__link\" to=\"/\">\r\n        Go back home\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","export default __webpack_public_path__ + \"static/media/missing-character.ffae77e9.png\";","import { Link } from 'react-router-dom';\r\nimport '../../stylesheets/extras/MissingCharacter.scss';\r\nimport missingCharacter from '../../images/missing-character.png';\r\n\r\nfunction MissingCharacter() {\r\n  return (\r\n    <article className=\"MissingCharacter\">\r\n      <div className=\"MissingCharacter__wrapper\">\r\n        <img\r\n          className=\"MissingCharacter__img\"\r\n          src={missingCharacter}\r\n          alt=\"No results for your search\"\r\n        />\r\n        <p className=\"MissingCharacter__text\">\r\n          Holly shit, the character you want doesn't exist\r\n        </p>\r\n      </div>\r\n      <Link className=\"MissingCharacter__link\" to=\"/\">\r\n        Go back to all characters\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default MissingCharacter;\r\n","import { getDataFromApi } from '../services/api';\nimport { setLocalStorage, getFromLocalStorage } from '../services/localstorage';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Loading from './Extras/Loading';\nimport ServerError from './Extras/ServerError';\nimport PageNotFound from './Extras/PageNotFound';\nimport MissingCharacter from './Extras/MissingCharacter';\n\nconst dataLocal = getFromLocalStorage();\n\nfunction App() {\n  //state\n  const [serverError, setServerError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(dataLocal.name);\n  const [filterGender, setFilterGender] = useState(dataLocal.gender);\n  const [filterStatus, setFilterStatus] = useState(dataLocal.status);\n  const [isSortedByName, setIsSortedByName] = useState(dataLocal.order);\n\n  //API\n  //checks the server response and shows a component named ServerError if there has been an error. If it's not, it saves the info in the state\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      if (data) {\n        setCharacters(data);\n        setIsLoading(false);\n      } else {\n        setServerError(true);\n      }\n    });\n  }, []);\n\n  //LOCAL STORAGE\n  //we send the filters info as parameters to the service localstorage.js\n  useEffect(() => {\n    setLocalStorage(filterName, filterGender, filterStatus, isSortedByName);\n  });\n\n  //HANDLERS\n  //saves the filters info in the state when an input changes\n  const handleFilters = (data) => {\n    if (data.name === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.name === 'gender') {\n      setFilterGender(data.value);\n    }\n    if (data.name === 'status') {\n      setFilterStatus(data.value);\n    }\n    if (data.name === 'order') {\n      setIsSortedByName(data.checked);\n    }\n  };\n\n  //resets the users search\n  const handleReset = () => {\n    setFilterName('');\n    setFilterGender('all');\n    setFilterStatus('all');\n    setIsSortedByName(false);\n  };\n\n  //FILTERS\n  //creates an array with the elements that matches the users search and sort elements by name if the user has selected that option\n  const filterCharacthers = () => {\n    const filteredCharacters = characters\n      .filter((character) => {\n        return character.name.toLowerCase().includes(filterName.toLowerCase());\n      })\n      .filter((character) => {\n        return (\n          filterGender === 'all' ||\n          character.gender.toLowerCase() === filterGender\n        );\n      })\n      .filter((character) => {\n        return (\n          filterStatus === 'all' ||\n          character.status.toLowerCase() === filterStatus\n        );\n      });\n    if (isSortedByName) {\n      filteredCharacters.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    return filteredCharacters;\n  };\n\n  //RENDER\n  //renders the details of the character with an id that matches the id of the selected route\n  const renderDetail = (props) => {\n    const characterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(characterId);\n    });\n    if (foundCharacter) {\n      const { image, name, species, status, origin, episode } = foundCharacter;\n      return (\n        <CharacterDetail\n          image={image}\n          name={name}\n          species={species}\n          status={status}\n          origin={origin.name}\n          episodes={episode.length}\n        />\n      );\n    } else {\n      return <MissingCharacter />;\n    }\n  };\n    \n  //when there is any error in the server\n  const renderServerError = () => {\n    return serverError === true ? <ServerError /> : null;\n  };\n\n  //while fetch\n  const renderLoading = () => {\n    return isLoading === true ? <Loading /> : null;\n  };\n\n  //jsx\n  return (\n    \n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <CharacterList\n            data={filterCharacthers()}\n            handleFilters={handleFilters}\n            handleReset={handleReset}\n            filterName={filterName}\n            filterGender={filterGender}\n            filterStatus={filterStatus}\n            isLoading={isLoading}\n            isSortedByName={isSortedByName}\n          />\n        </Route>\n        <Route path=\"/character/:id\" component={renderDetail} />\n        <Route path=\"/\" component={PageNotFound} />\n      </Switch>\n      {renderServerError()}\n      {renderLoading()}\n      \n    </>\n    \n  );\n}\n\nexport default App;\n","const getFromLocalStorage = () => {\r\n  const dataLocal = JSON.parse(localStorage.getItem('filters'));\r\n  return dataLocal !== null\r\n    ? dataLocal\r\n    : {\r\n        name: 'all',\r\n        image:'all',\r\n        gender: 'all',\r\n        location:'all',\r\n        origin:'all',\r\n        species:'all',\r\n        episodes:'all',\r\n        status: 'all',\r\n        order: false,\r\n      };\r\n};\r\n\r\nconst setLocalStorage = (filterName, filterGender, filterStatus, isOrdered) => {\r\n  const filters = {\r\n    name: filterName,\r\n    gender: filterGender.toLowerCase(),\r\n    status: filterStatus.toLowerCase(),\r\n    order: isOrdered,\r\n  };\r\n  localStorage.setItem('filters', JSON.stringify(filters));\r\n};\r\n\r\nexport { setLocalStorage, getFromLocalStorage };\r\n","\r\nconst defaultEndpoint = `https://rickandmortyapi.com/api/character/`;\r\n\r\n\r\nconst getDataFromApi = () => {\r\n  return fetch(defaultEndpoint)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data.results;\r\n    })\r\n    .catch(() => {});\r\n};\r\n\r\nexport { getDataFromApi };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from '../src/components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}